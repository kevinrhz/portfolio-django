# Generated by Django 5.2 on 2025-05-17 22:49

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProjectCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(help_text="URL-friendly version of name, e.g., 'web-dev'", max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Project Category',
                'verbose_name_plural': 'Project Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('level', models.CharField(choices=[('basic', 'Basic'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], max_length=20)),
                ('view_category', models.CharField(choices=[('swe', 'Software Engineering'), ('dsml', 'Data Science & ML'), ('common', 'Common Skills')], help_text='Main category for view toggle (SWE, DS/ML, Common)', max_length=20)),
                ('sub_category_name', models.CharField(help_text='e.g., Languages, Frameworks, DevOps, Libraries & Toolkits, Databases', max_length=100)),
                ('icon_path', models.CharField(blank=True, help_text="Path to icon, e.g., 'icons/python-icon.svg'", max_length=200, null=True)),
                ('icon_recolor', models.BooleanField(default=False, help_text='Check if this icon is black and needs the creamsicle gradient')),
                ('associated_frameworks', models.TextField(blank=True, help_text='For language skills, list associated frameworks/libraries (e.g., Django, Flask, PyQt6 for Python)')),
                ('order', models.PositiveIntegerField(default=0, help_text='Order of display within its sub-category')),
            ],
            options={
                'verbose_name': 'Skill',
                'verbose_name_plural': 'Skills',
                'ordering': ['view_category', 'sub_category_name', 'order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('poster_image_path', models.CharField(blank=True, help_text="e.g., 'images/poster-echolab.jpg'", max_length=255, null=True)),
                ('short_description', models.CharField(max_length=255)),
                ('long_description', models.TextField(blank=True)),
                ('github_url', models.URLField(blank=True, null=True)),
                ('live_url', models.URLField(blank=True, null=True)),
                ('demo_url_name', models.CharField(blank=True, help_text="Name of the URL pattern for Django's {% url %} tag if demo is internal (e.g., 'cinesteam_demo')", max_length=100, null=True)),
                ('tech_stack_list', models.CharField(blank=True, help_text='Comma-separated list of key technologies', max_length=500)),
                ('order', models.PositiveIntegerField(default=0, help_text='Order of display')),
                ('is_featured', models.BooleanField(default=False, help_text='Highlight this project?')),
                ('categories', models.ManyToManyField(blank=True, help_text='Select categories for filtering', to='main.projectcategory')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'ordering': ['order', 'title'],
            },
        ),
    ]
